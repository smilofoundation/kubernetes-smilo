<%
# Create Kubernetes resources for smilo keys:
#   nodekey (geth)
#   keystore account key (geth)
#   transaction manager key `tm` (smilo: blackbox)
def set_node_template_vars(values)
    @Node_UserIdent        = values["Node_UserIdent"]
    @Node_Key_Dir          = values["Key_Dir"]
    return
end

# keys are named the same inside their respective directories.
@Keystore_Dir = @config["smilo"]["Key_Dir_Base"]
-%>


<%- @nodes.each do |node| -%>
<%= set_node_template_vars(node.values.first) -%>

# kubectl create configmap game-config --from-file=configure-pod-container/dd1/key
# the key used for private transactions
# smilo transaction manager keys
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: <%= @Node_UserIdent %>-tm-key-config
  <%= @Namespace %>
  labels:
    app: kubernetes-smilo
    name: <%= @Node_UserIdent %>-tm-key-config
data:
  tm.key: |-
<%- File.readlines("#{@Keystore_Dir}/#{@Node_Key_Dir}/tm.key").each do |line| -%>
    <%= line -%>
<% end -%>

  tm.pub: |-
<%- File.readlines("#{@Keystore_Dir}/#{@Node_Key_Dir}/tm.pub").each do |line| -%>
    <%= line -%>
<% end -%>

---
# kubectl create configmap game-config --from-file=configure-pod-container/dd1/key
# nodekey (enode) (geth/ethereum)
apiVersion: v1
kind: ConfigMap
metadata:
  name: <%= @Node_UserIdent %>-nodekey-config
  <%= @Namespace %>
  labels:
    app: kubernetes-smilo
    name: <%= @Node_UserIdent %>-nodekey-config
data:
  nodekey: |
<%- File.readlines("#{@Keystore_Dir}/#{@Node_Key_Dir}/nodekey").each do |line| -%>
    <%= line -%>
<% end -%>


# ethereum / geth account keys (keystore)
---
# kubectl create configmap game-config --from-file=configure-pod-container/dd1/key
apiVersion: v1
kind: ConfigMap
metadata:
  name: <%= @Node_UserIdent %>-account-key-config
  <%= @Namespace %>
  labels:
    app: kubernetes-smilo
    name: <%= @Node_UserIdent %>-account-key-config
data:
  key: |-

<%- @Keystore_File=Dir[@Keystore_Dir + "/" + @Node_Key_Dir + "/key*"][0] %>
<%- File.readlines("#{@Keystore_File}").each do |line| -%>
    <%= line -%>
<% end -%>

# end node
<% end %>
